{"version":3,"sources":["firebase/firebase.js","components/helper/utility.js","actions/users.js","components/general/ProductDashboardPage.js","components/product/ProductForm.js","actions/products.js","components/product/AddProductPage.js","components/general/RegistrationForm.js","components/user/AddUserPage.js","components/product/EditProductPage.js","components/general/NotFoundPage.js","components/general/LoginPage.js","actions/auth.js","components/general/Header.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/product/ProductListItem.js","components/product/ProductList.js","components/admin/AdminPage.js","actions/userPurchaseHistory.js","components/purchase/PurchaseListItem.js","components/purchase/PurchaseList.js","components/user/UserPage.js","components/manageWallet/UserListItem.js","components/manageWallet/UserList.js","components/manageWallet/PayForm.js","actions/userPaymentHistory.js","components/manageWallet/PaymentPage.js","actions/admin.js","components/manageAdminWallet/index.js","components/manageAdminWallet/PayForm.js","actions/adminHistory.js","components/manageAdminWallet/paymentPage.js","components/manageAdminWallet/paymentListItem.js","components/manageAdminWallet/paymentList.js","components/userPayment/userPaymentListItem.js","actions/currentuserHistory.js","components/userPayment/userPaymentList.js","actions/currentUserPurchaseHistory.js","components/userPurchase/userPurchaseList.js","routers/AppRouter.js","reducers/products.js","reducers/filters.js","reducers/auth.js","reducers/users.js","reducers/admin.js","reducers/adminHistory.js","reducers/userPaymentHistory.js","reducers/userPurchaseHistory.js","reducers/currentUserHistory.js","reducers/currentUserPurchaseHistory.js","store/configureStore.js","serviceWorker.js","components/general/LoadingPage.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","googleAuthProvider","GoogleAuthProvider","dynamicSort","property","sortOrder","substr","a","b","normalDate","rawDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","startSetUsers","dispatch","getState","auth","uid","ref","once","then","snapshot","users","forEach","childSnapshot","push","id","key","val","type","setUsers","sort","startEditUser","updates","update","editUser","connect","state","props","user","find","name","createUser","className","admin","onClick","history","ProductForm","onNameChange","e","target","value","setState","onImageChange","image","onAmountChange","amount","match","onSubmit","preventDefault","error","product","toString","this","placeholder","autoFocus","onChange","goBack","React","Component","withRouter","addProduct","removeProduct","startSetProducts","products","setProducts","AddProductPage","startAddProduct","undefined","productData","RegistrationForm","htmlType","AddUserPage","message","success","existingUser","style","background","padding","gutter","span","title","bordered","numeral","format","paid","offset","EditProductPage","startEditProduct","onRemove","startRemoveProduct","params","editProduct","data","remove","NotFoundPage","to","startLogin","signInWithPopup","startLogout","signOut","isAuthenticated","component","rest","ProductListItem","length","map","AdminPage","addUserPurchaseHistory","Purchase","Meta","Card","PurchaseListItem","addCart","prevState","cart","removeCart","addAmount","today","Date","initialAmount","parseInt","startAddUserPurchaseHistory","quantity","date","closeModal","modalIsOpen","openModal","bind","afterOpenModal","subtitle","color","height","cover","alt","src","actions","description","visible","onOk","onCancel","width","footer","disabled","PurchaseData","UserPage","UserListItem","PayForm","newPaid","updatedPaid","addUserPaymentHistory","payment","startSetUserPaymentHistory","userPaymentHistory","PaymentPage","startPay","startAdminAddAmount","cash","startAddUserPaymentHistory","pay","paymentData","addHistory","startSetAdminHistory","adminHistory","startAdminAddHistoryAmount","startAdminPay","payAdmin","PaymentListItem","currentUserHistory","startSetCurrentUserPaymentHistory","useEffect","currentUserPurchaseHistory","startSetCurrentUserPurchaseHistory","userPurchaseHistory","purchase","dataSource","reverse","columns","dataIndex","render","pagination","defaultPageSize","createHistory","AppRouter","path","LoginPage","exact","ProductDashboardPage","UserList","manageAdminWallet","AdminPaymentPage","CashOutList","UserPaymentList","UserPurchaseList","productsReducerDefaultState","action","filter","filtersReducerDefaultState","text","sortBy","startDate","moment","startOf","endDate","endOf","email","usersReducerDefaultState","adminReducerDefaultState","adminHistoryReducerDefaultState","userPaymentHistoryReducerDefaultState","userPurchaseHistoryReducerDefaultState","currentUserPaymentHistoryReducerDefaultState","currentUserPurchaseHistoryReducerDefaultState","composeEnhancers","compose","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","LoadingPage","store","createStore","combineReducers","productsReducer","filters","filtersReducer","authReducer","usersReducer","adminReducer","adminHistoryReducer","userPaymentHistoryReducer","userPurchaseHistoryReducer","currentUserHistoryReducer","currentUserPurchaseHistoryReducer","applyMiddleware","thunk","jsx","hasRendered","renderApp","setAdmin","ReactDOM","document","getElementById","onAuthStateChanged","currentUser","displayName","login","pathname","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.32eb3220.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n//const \n\nconst config = {\n  apiKey: \"AIzaSyCzFkfDGy0EfakSGY64GnvFhnHEqS_jW8c\",\n  authDomain: \"foodcount-7d19e.firebaseapp.com\",\n  databaseURL: \"https://foodcount-7d19e-default-rtdb.firebaseio.com\",\n  projectId: \"foodcount-7d19e\",\n  storageBucket: \"foodcount-7d19e.appspot.com\",\n  messagingSenderId: \"740771838193\",\n  appId: \"1:740771838193:web:cdb175252d422067559150\",\n  measurementId: \"G-F3PRBGZN2M\"\n};\n\n//test\n// const config = {\n//   apiKey: \"AIzaSyC4UHnUgrD70jh_zbyWg93u8TIy8U3uQgI\",\n//   authDomain: \"test-d0194.firebaseapp.com\",\n//   databaseURL: \"https://test-d0194.firebaseio.com\",\n//   projectId: \"test-d0194\",\n//   storageBucket: \"test-d0194.appspot.com\",\n//   messagingSenderId: \"487345387045\",\n//   appId: \"1:487345387045:web:d83bae8c6ad5ec1c51f1cc\",\n//   measurementId: \"G-E5ZVNH0P29\"\n// };\n\n\n\n// production\n// const config = {\n//   apiKey: \"AIzaSyApbSlpzYw_yvIFUdO0CtZFn45IZ47VcVg\",\n//   authDomain: \"foodcount-e830c.firebaseapp.com\",\n//   databaseURL: \"https://foodcount-e830c.firebaseio.com\",\n//   projectId: \"foodcount-e830c\",\n//   storageBucket: \"foodcount-e830c.appspot.com\",\n//   messagingSenderId: \"594386529430\",\n//   appId: \"1:594386529430:web:f3e0787f914242b87966b7\",\n//   measurementId: \"G-K5K7S08KTJ\"\n// };\n\nfirebase.initializeApp(config);\n\nconst database = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { firebase, googleAuthProvider, database as default };\n\n// // child_removed\n// database.ref('expenses').on('child_removed', (snapshot) => {\n//   console.log(snapshot.key, snapshot.val());\n// });\n\n// // child_changed\n// database.ref('expenses').on('child_changed', (snapshot) => {\n//   console.log(snapshot.key, snapshot.val());\n// });\n\n// // child_added\n// database.ref('expenses').on('child_added', (snapshot) => {\n//   console.log(snapshot.key, snapshot.val());\n// });\n\n// // database.ref('expenses')\n// //   .once('value')\n// //   .then((snapshot) => {\n// //     const expenses = [];\n\n// //     snapshot.forEach((childSnapshot) => {\n// //       expenses.push({\n// //         id: childSnapshot.key,\n// //         ...childSnapshot.val()\n// //       });\n// //     });\n\n// //     console.log(expenses);\n// //   });\n\n// // database.ref('expenses').on('value', (snapshot) => {\n// //   const expenses = [];\n\n// //   snapshot.forEach((childSnapshot) => {\n// //     expenses.push({\n// //       id: childSnapshot.key,\n// //       ...childSnapshot.val()\n// //     });\n// //   });\n\n// //   console.log(expenses);\n// // });\n\n// database.ref('expenses').push({\n//   description: 'Rent',\n//   note: '',\n//   amount: 109500,\n//   createdAt: 976123498763\n// });\n\n\n\n\n\n\n// // database.ref('notes/-Krll52aVDQ3X6dOtmS7').remove();\n\n// // database.ref('notes').push({\n// //   title: 'Course Topics',\n// //   body: 'React Native, Angular, Python'\n// // });\n\n// // database.ref().on('value', (snapshot) => {\n// //   const val = snapshot.val();\n// //   console.log(`${val.name} is a ${val.job.title} at ${val.job.company}`);\n// // })\n\n// // Setup data sub -> Andrew is a Software Developer at Amazon.\n\n// // Change the data and make sure it reprints\n\n// // database.ref('location/city')\n// //   .once('value')\n// //   .then((snapshot) => {\n// //     const val = snapshot.val();\n// //     console.log(val);\n// //   })\n// //   .catch((e) => {\n// //     console.log('Error fetching data', e);\n// //   });\n\n// // database.ref().set({\n// //   name: 'Andrew Mead',\n// //   age: 26,\n// //   stressLevel: 6,\n// //   job: {\n// //     title: 'Software developer',\n// //     company: 'Google'\n// //   },\n// //   location: {\n// //     city: 'Philadelphia',\n// //     country: 'United States'\n// //   }\n// // }).then(() => {\n// //   console.log('Data is saved!');\n// // }).catch((e) => {\n// //   console.log('This failed.', e);\n// // });\n\n// // database.ref().update({\n// //   stressLevel: 9,\n// //   'job/company': 'Amazon',\n// //   'location/city': 'Seattle'\n// // });\n\n// // database.ref()\n// //   .remove()\n// //   .then(() => {\n// //     console.log('Data was removed');\n// //   }).catch((e) => {\n// //     console.log('Did not remove data', e);\n// //   });\n","export const dynamicSort=(property)=> {\n    var sortOrder = 1;\n    if(property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n    }\n    return function (a,b) {\n        /* next line works with strings and numbers, \n         * and you may want to customize it to your needs\n         */\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n        return result * sortOrder;\n    }\n}\n\nexport const normalDate=(rawDate)=>{\n    var date = rawDate.getFullYear()+'-'+(rawDate.getMonth()+1)+'-'+rawDate.getDate();\n    var time = rawDate.getHours() + \":\" + rawDate.getMinutes() + \":\" + rawDate.getSeconds(); \n    let dateTime = date+' '+time;\n    return dateTime; \n}","import uuid from 'uuid';\nimport database from '../firebase/firebase';\nimport {dynamicSort} from '../components/helper/utility'\n\n// ADD_USER\nexport const addUser = (user) => ({\n  type: 'ADD_USER',\n  user\n});\n\nexport const startAddUser = (userData = {}) => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const {\n      id = uid,\n      name = '',\n\n      amount = 0\n\n    } = userData;\n    const user = { id, name, amount };\n    //return database.ref(`users/${uid}/products`).push(product).then((ref)\n    return database.ref(`users`).push(user).then((ref) => {\n      dispatch(addUser({\n        id: ref.key,\n        ...user\n      }));\n    });\n  };\n};\n\n\n// SET_USERS\nexport const setUsers = (users) => ({\n  type: 'SET_USERS',\n  users\n});\n\nexport const startSetUsers = () => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`users`).once('value').then((snapshot) => {\n      const users = [];\n\n\n      snapshot.forEach((childSnapshot) => {\n        users.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n      dispatch(setUsers(users.sort(dynamicSort(\"name\"))));\n\n    });\n  };\n};\n\n// EDIT_USER\nexport const editUser = (id, updates) => ({\n  type: 'EDIT_USER',\n  id,\n  updates\n});\n\nexport const startEditUser = (updates) => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`users/${uid}`).update(updates).then(() => {\n      dispatch(editUser(uid, updates));\n    });\n  };\n};\n//ADD_PAY\nexport const pay = (id, updates) => ({\n  type: 'PAY',\n  id,\n  updates\n});\n\nexport const startPay = (id,updates) => {\n  return (dispatch, getState) => {\n   return database.ref(`users/${id}`).update(updates).then(() => {\n      dispatch(pay(id, updates));\n    });\n  };\n};\n\n\n// ADD_AMOUNT\nexport const addAmount = (id, updates) => ({\n  type: 'ADD_AMOUNT',\n  id,\n  updates\n});\n\nexport const startAddAmount = (id, updates) => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`users/${id}`).update(updates).then(() => {\n      dispatch(addAmount(id, updates));\n    });\n  };\n};\n","import React from 'react';\nimport { history } from '../../routers/AppRouter';\nimport { connect } from 'react-redux';\nimport { startEditUser, startSetUsers } from '../../actions/users';\n// import ClearCache from \"react-clear-cache\";\n\nexport const ProductDashboardPage = (props) => {\n  const onClickAdmin = () => {\n    history.push('/admin');\n  }\n  const onClickUser = () => {\n    history.push('/user');\n  }\n  const onClickProfile = () => {\n    history.push('/addUser');\n  }\n  const createUser = () => {\n\n    if (!props.user) {\n      const user = {\n        name: props.auth.name\n      }\n      props.startEditUser(user);\n      props.startSetUsers();\n    }\n  }\n  createUser();\n  return (\n    <div  >\n\n      {\n        props.user &&\n        <div className=\"dashboard-btn\">\n          {\n            props.user.admin == 1 &&\n            <button className='buttonAdmin' onClick={onClickAdmin} > Admin </button>\n          }\n          <button className='buttonUser' onClick={onClickUser} > Buy</button>\n        </div>\n      }\n      <button className='buttonProfile' onClick={onClickProfile} > Manage Profile</button>\n      {/* <div>\n        <ClearCache>\n          {({ isLatestVersion, emptyCacheStorage }) => (\n            <div>\n              {!isLatestVersion && (\n                <p>\n                  <button className='buttonAdmin' onClick={e => {\n                    e.preventDefault();\n                    emptyCacheStorage();\n                  }}>  Update version</button>\n                </p>\n              )}\n            </div>\n          )}\n        </ClearCache>\n      </div> */}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    user: state.users.find((user) => user.id === state.auth.uid),\n    auth: state.auth\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  startEditUser: (user) => dispatch(startEditUser(user)),\n  startSetUsers: () => dispatch(startSetUsers())\n});\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDashboardPage);\n\n// export default ProductDashboardPage;\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n class ProductForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: props.product ? props.product.name : '',\n\n      image: props.product ? props.product.image : '',\n\n      amount: props.product ? (props.product.amount).toString() : '',\n\n      error: ''\n    };\n  }\n  onNameChange = (e) => {\n    const name = e.target.value;\n    this.setState(() => ({ name }));\n  };\n  onImageChange = (e) => {\n    const image = e.target.value;\n    this.setState(() => ({ image }));\n  };\n  onAmountChange = (e) => {\n    const amount = e.target.value;\n\n    if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n      this.setState(() => ({ amount }));\n    }\n  };\n\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!this.state.name || !this.state.amount) {\n      this.setState(() => ({ error: 'Please provide name and amount.' }));\n    } else {\n      this.setState(() => ({ error: '' }));\n      this.props.onSubmit({\n        name: this.state.name,\n        amount: this.state.amount,\n        image:this.state.image ? this.state.image:'',\n\n      });\n    }\n  };\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onSubmit}>\n        {this.state.error && <p className=\"form__error\">{this.state.error}</p>}\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          autoFocus\n          className=\"text-input\"\n          value={this.state.name}\n          onChange={this.onNameChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Amount\"\n          className=\"text-input\"\n          value={this.state.amount}\n          onChange={this.onAmountChange}\n        />\n        <input\n        type=\"text\"\n        placeholder=\"Paste Image url\"\n        className=\"text-input\"\n        value={this.state.image}\n        onChange={this.onImageChange}\n      />\n\n\n\n        <div>\n          <button className=\"button\">Save Product</button>\n          <button className=\"button-red\" onClick={()=>{this.props.history.goBack();}}>Back</button>\n\n        </div>\n      </form>\n    )\n  }\n}\nexport default  withRouter(ProductForm);","import uuid from 'uuid';\nimport database from '../firebase/firebase';\nimport { dynamicSort } from '../components/helper/utility'\n\n// ADD_PRODUCT\nexport const addProduct = (product) => ({\n  type: 'ADD_PRODUCT',\n  product\n});\n\nexport const startAddProduct = (productData = {}) => {\n  debugger\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const {\n      name = '',\n\n      amount = 0,\n      image = ''\n\n    } = productData;\n    const product = { name, amount, image };\n    debugger\n    //return database.ref(`users/${uid}/products`).push(product).then((ref)\n    return database.ref(`products`).push(product).then((ref) => {\n      dispatch(addProduct({\n        id: ref.key,\n        ...product\n      }));\n    });\n  };\n};\n\n// REMOVE_PRODUCT\nexport const removeProduct = ({ id } = {}) => ({\n  type: 'REMOVE_PRODUCT',\n  id\n});\n\nexport const startRemoveProduct = ({ id } = {}) => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`products/${id}`).remove().then(() => {\n      dispatch(removeProduct({ id }));\n    });\n  };\n};\n\n// EDIT_PRODUCT\nexport const editProduct = (id, updates) => ({\n  type: 'EDIT_PRODUCT',\n  id,\n  updates\n});\n\nexport const startEditProduct = (id, updates) => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`products/${id}`).update(updates).then(() => {\n      dispatch(editProduct(id, updates));\n    });\n  };\n};\n\n// SET_PRODUCTS\nexport const setProducts = (products) => ({\n  type: 'SET_PRODUCTS',\n  products\n});\n\nexport const startSetProducts = () => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`products`).once('value').then((snapshot) => {\n      const products = [];\n\n\n      snapshot.forEach((childSnapshot) => {\n        products.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n      dispatch(setProducts(products.sort(dynamicSort(\"name\"))));\n    });\n  };\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProductForm from './ProductForm';\nimport { startAddProduct } from '../../actions/products';\n\nexport class AddProductPage extends React.Component {\n  onSubmit = (product) => {\n    this.props.startAddProduct(product);\n    this.props.history.push('/admin');\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <div className=\"content-container\">\n            <h1 className=\"page-header__title\">Add Product</h1>\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <ProductForm\n            onSubmit={this.onSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  startAddProduct: (product) => dispatch(startAddProduct(product))\n});\n\nexport default connect(undefined, mapDispatchToProps)(AddProductPage);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Icon } from 'antd'\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: props.user ? props.user.name : '',\n\n      error: ''\n    };\n  }\n  onNameChange = (e) => {\n    const name = e.target.value;\n    this.setState(() => ({ name }));\n  };\n\n\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!this.state.name) {\n      this.setState(() => ({ error: 'Please provide name .' }));\n    } else {\n      this.setState(() => ({ error: '' }));\n      this.props.onSubmit({\n        name: this.state.name,\n\n      });\n    }\n  };\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onSubmit}>\n        {this.state.error && <p className=\"form__error\">{this.state.error}</p>}\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          className=\"text-input\"\n          value={this.state.name}\n          onChange={this.onNameChange}\n        />\n        <div>\n          <Button type='danger' onClick={() => { this.props.history.goBack(); }}> <Icon type=\"left\" />Back</Button>\n          {' '}\n          <Button type='primary' htmlType=\"submit\">Save</Button>\n\n        </div>\n      </form>\n    )\n  }\n}\nexport default withRouter(RegistrationForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport RegistrationForm from '../general/RegistrationForm';\nimport { startEditUser, startSetUsers } from '../../actions/users';\nimport numeral from 'numeral';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Button, Card, message } from 'antd';\n\nexport class AddUserPage extends React.Component {\n  onSubmit = (user) => {\n    this.props.startEditUser(user);\n    this.props.startSetUsers();\n    message.success(\"Profile has been updated successfully\");\n    // this.props.history.push('/dashboard');\n  };\n  render() {\n    const { auth } = this.props;\n    return (\n      <div>\n        <div className=\"content-container\">\n          <div className=\"page-header\">\n            <div className=\"content-container\">\n              <h1 className=\"page-header__title\">Profile</h1>\n            </div>\n          </div>\n          <div className=\"content-container\">\n            <RegistrationForm user={this.props.existingUser}\n              onSubmit={this.onSubmit}\n            />\n          </div>\n\n          <div className='show-for-desktop' style={{ background: '#ECECEC', padding: '30px' }}>\n            <Row gutter={16}>\n              <Col span={8}>\n                <Card title=\"Total Cost\" bordered={false}>\n                  ৳{numeral(this.props.existingUser.amount).format('0,0.00')}\n                </Card>\n              </Col>\n              <Col span={8}>\n                <Card title=\"Total Paid\" bordered={false}>\n                  ৳{numeral(this.props.existingUser.paid).format('0,0.00')}\n                </Card>\n              </Col>\n              <Col span={8}>\n                <Card title=\"Total Due\" bordered={false}>\n                  ৳{numeral(this.props.existingUser.amount - (this.props.existingUser.paid ? this.props.existingUser.paid : 0)).format('0,0.00')}\n                </Card>\n              </Col>\n            </Row>\n          </div>\n          <div className=\"show-for-mobile \">\n            <div className=\" list-item-wallet\">\n              <h2 className=\"list-item__data\">Total Cost: ৳{numeral(this.props.existingUser.amount).format('0,0.00')}</h2>\n              <h2 className=\"list-item__data\">Total Paid: ৳{numeral(this.props.existingUser.paid).format('0,0.00')}</h2>\n              <h2 className=\"list-item__data\">Total Due: ৳{numeral(this.props.existingUser.amount - (this.props.existingUser.paid ? this.props.existingUser.paid : 0)).format('0,0.00')}</h2>\n            </div>\n          </div>\n          <div className='show-for-mobile'>\n            <br />\n            <Button type='primary' onClick={() => { this.props.history.push(`/userPaymentHistory/${this.props.existingUser.id}`); }} >Payment History</Button>{'  '}\n            <Button type='primary' onClick={() => { this.props.history.push(`/userPurchaseHistory/${this.props.existingUser.id}`); }} >Purchase History</Button>\n          </div>\n          <div className='show-for-desktop'>\n            <br />\n            <Row gutter={[40, 24]}>\n              <Col span={12} offset={7}>\n                <Button type='primary' onClick={() => { this.props.history.push(`/userPaymentHistory/${this.props.existingUser.id}`); }} >Payment History</Button>{'  '}\n                <Button type='primary' onClick={() => { this.props.history.push(`/userPurchaseHistory/${this.props.existingUser.id}`); }} >Purchase History</Button>\n              </Col>\n            </Row>\n\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  //  existingUser: state.users.find((user) => user.id === props.match.params.id)\n  existingUser: state.users.find((user) => user.id === state.auth.uid),\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  startEditUser: (user) => dispatch(startEditUser(user)),\n  startSetUsers: () => dispatch(startSetUsers())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUserPage);","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProductForm from './ProductForm';\nimport { startEditProduct, startRemoveProduct } from '../../actions/products';\n\nexport class EditProductPage extends React.Component {\n  onSubmit = (product) => {\n    this.props.startEditProduct(this.props.product.id, product);\n    this.props.history.push('/admin');\n  };\n  onRemove = () => {\n    this.props.startRemoveProduct({ id: this.props.product.id });\n    this.props.history.push('/admin');\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <div className=\"content-container\">\n            <h1 className=\"page-header__title\">Edit Product</h1>\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <ProductForm\n            product={this.props.product}\n            onSubmit={this.onSubmit}\n          />\n          <button className=\"button button--secondary\" onClick={this.onRemove}>Remove Product</button>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, props) => ({\n  product: state.products.find((product) => product.id === props.match.params.id)\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  startEditProduct: (id, product) => dispatch(startEditProduct(id, product)),\n  startRemoveProduct: (data) => dispatch(startRemoveProduct(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProductPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { startLogin } from '../../actions/auth';\n\nexport const LoginPage = ({ startLogin }) => (\n  <div className=\"box-layout\">\n    <div className=\"box-layout__box\">\n      <h1 className=\"box-layout__title\">Food Count</h1>\n      <p>Let's Eat.</p>\n      <button className=\"button\" onClick={startLogin}>Login with Google</button>\n    </div>\n  </div>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogin: () => dispatch(startLogin())\n});\n\nexport default connect(undefined, mapDispatchToProps)(LoginPage);\n","import { firebase, googleAuthProvider } from '../firebase/firebase';\n\nexport const login = (uid , email=firebase.auth().currentUser.email , name=firebase.auth().currentUser.displayName) => ({\n  type: 'LOGIN',\n  uid,\n  email,\n  name\n});\n\nexport const startLogin = () => {\n  return () => {\n    return firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n};\n\nexport const logout = () => ({\n  type: 'LOGOUT'\n});\n\nexport const startLogout = () => {\n  return () => {\n    return firebase.auth().signOut();\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../../styles/plugins/fontawesome/font-awesome.min.css';\nimport { startLogout } from '../../actions/auth';\n\nexport const Header = ({ startLogout }) => (\n  <header className=\"header\">\n    <div className=\"content-container\">\n      <div className=\"header__content\">\n        <Link className=\"header__title\" to=\"/dashboard\">\n        <h2 className=\"text-white h2 mb-0\">Food Count</h2>\n        </Link>\n        <button className=\"button button--link\" onClick={startLogout}>Logout</button>\n      </div>\n    </div>\n  </header>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogout: () => dispatch(startLogout())\n});\n\nexport default connect(undefined, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../components/general/Header';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n    <Route {...rest} component={(props) => (\n      isAuthenticated ? (\n        <div>\n          <Header />\n          <Component {...props} />\n        </div>\n      ) : (\n          <Redirect to=\"/\" />\n        )\n    )} />\n  );\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n    <Route {...rest} component={(props) => (\n      isAuthenticated ? (\n        <Redirect to=\"/dashboard\" />\n      ) : (\n          <Component {...props} />\n        )\n    )} />\n  );\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nconst ProductListItem = ({ id, name, amount }) => (\n  <Link className=\"list-item\" to={`/edit/${id}`}>\n    <div>\n      <h3 className=\"list-item__title\">{name}</h3>\n     </div>\n    <h3 className=\"list-item__data\">৳{numeral(amount).format('0,0.00')}</h3>\n  </Link>\n);\n\nexport default ProductListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProductListItem from './ProductListItem';\n// import selectProducts from '../selectors/products';\n\nexport const ProductList = (props) => (\n  <div className=\"content-container\">\n    <div className=\"list-header\">\n      <div className=\"show-for-mobile\">Products</div>\n      <div className=\"show-for-desktop\">Product</div>\n      <div className=\"show-for-desktop\">Amount</div>\n    </div>\n\n    <div className=\"list-body\">\n      {\n\n        props.products.length === 0 ? (\n          <div className=\"list-item list-item--message\">\n            <span>No products</span>\n          </div>\n        ) : (\n            props.products.map((product) => {\n              return <ProductListItem key={product.id} {...product} />;\n            })\n          )\n      }\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n    name: state\n  };\n};\n\nexport default connect(mapStateToProps)(ProductList);\n","import React from 'react';\nimport ProductList from '../product/ProductList';\nimport { Link } from 'react-router-dom';\nimport { Button, Icon } from 'antd';\n\n\n\n\nconst AdminPage = (props) => (\n  <div>\n    <div className=\"page-header__actions\">\n      <Link className=\"button\" to=\"/create\">Add Product</Link>\n      <Link className=\"button\" to=\"/manageWallet\">Manage Wallet</Link>\n      <Link className=\"button\" to=\"/manageAdminWallet\">Admin Wallet</Link>\n    </div>\n    <ProductList />\n    <div className=\"content-container\">\n      <Button type={\"danger\"} onClick={() => { props.history.goBack(); }}><Icon type=\"left\" />Back</Button>\n    </div>\n\n  </div>\n);\n\nexport default AdminPage;","import database from '../firebase/firebase';\n\n\n\n//ADD Purchase History\nexport const addUserPurchaseHistory = (id, Purchase) => ({\n  type: 'ADD_USER_PURCHASE_HISTORY',\n  id,\n  Purchase\n});\n\nexport const startAddUserPurchaseHistory = (id, PurchaseData = {}) => {\n  return (dispatch, getState) => {\n    const {\n      date = '',\n\n      amount = 0,\n      name = '',\n      quantity = 0\n\n    } = PurchaseData;\n    const Purchase = {date, amount, name, quantity};\n    return database.ref(`userPurchaseHistory/${id}`).push(Purchase).then((ref) => {\n      dispatch(addUserPurchaseHistory({\n        ...Purchase\n      }));\n    });\n  };\n};\n\n\n// SET_ADMIN\nexport const setUserPurchaseHistory = (Purchase) => ({\n  type: 'SET_USER_PURCHASE_HISTORY',\n  Purchase\n});\n\nexport const startSetUserPurchaseHistory = () => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`userPurchaseHistory`).once('value').then((snapshot) => {\n      const userPurchaseHistory = [];\n     \n\n      snapshot.forEach((childSnapshot) => {\n        userPurchaseHistory.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n\n\n      dispatch(setUserPurchaseHistory(userPurchaseHistory));\n    });\n  };\n};","import React from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { startEditUser } from '../../actions/users';\nimport { startAddUserPurchaseHistory } from '../../actions/userPurchaseHistory';\nimport { normalDate } from '../helper/utility'\nimport { Col, Row, Button, Card, Icon, Modal, message } from 'antd';\n\n// import Modal from 'react-modal';\nconst { Meta } = Card;\n\nconst customStyles = {\n  content: {\n    // width: \"80%\",\n    // // height: \"50%\",\n    // top: '30%',\n    // background: \"white\"\n\n  }\n};\n\n\n\n// Modal.setAppElement('#app')\n\nexport class PurchaseListItem extends React.Component {\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      modalIsOpen: false,\n      cart: 1,\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#000';\n  }\n\n  closeModal() {\n\n    this.setState({ modalIsOpen: false });\n    if (this.state.cart) {\n      this.setState((prevState, props) => ({\n        cart: 1\n      }));\n    }\n  }\n  addCart = () => {\n    this.setState((prevState, props) => ({\n      cart: prevState.cart + 1\n    }));\n  }\n  removeCart = () => {\n    if (this.state.cart>1) {\n      this.setState((prevState, props) => ({\n        cart: prevState.cart - 1\n      }));\n    }\n  }\n\n  addAmount = () => {\n    let today = new Date;\n\n    const initialAmount = this.props.user.amount * 1 ? this.props.user.amount * 1 : '0';\n    const user = {\n      amount: ((parseInt(initialAmount) + (parseInt(this.props.amount) * this.state.cart)))\n    }\n    this.props.startEditUser(user);\n    this.props.startAddUserPurchaseHistory(this.props.user.id, { name: this.props.name, amount: this.props.amount, quantity: this.state.cart, date: normalDate(today) });\n    this.closeModal();\n    message.success(\"Product has been purchased successfully\");\n\n\n  }\n  render() {\n    return (\n      <div>\n        <div className='show-for-mobile'>\n          <Col span={24}>\n            <Card\n              bordered={true}\n              style={{ height: 300 }}\n              cover={\n                <img\n                  alt=\"example\"\n                  src={this.props.image ? this.props.image : \"https://www.ukmarket.in/sites/default/files/styles/large/public/default_images/default-product.jpg?itok=Ptm5dtOz\"}\n                  height={'200'}\n                // width={'200'}\n                />\n              }\n              actions={[\n                <button style={{ color: 'red' }} className=\"list-item-button \" onClick={this.openModal}> <Icon type=\"shopping-cart\" /> Buy Now </button>\n              ]}\n            >\n              <Meta\n                // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                title={this.props.name}\n                description={numeral(this.props.amount).format('‎0,0.00')}\n              />\n            </Card>\n        </Col>\n        </div>\n\n        <div className='show-for-desktop' >\n          <Col span={8}>\n            <Card\n              bordered={true}\n              style={{ height: 300 }}\n              cover={\n                <img\n                  alt=\"example\"\n                  src={this.props.image ? this.props.image : \"https://www.ukmarket.in/sites/default/files/styles/large/public/default_images/default-product.jpg?itok=Ptm5dtOz\"}\n                  height={'200'}\n                />\n              }\n              actions={[\n                <button style={{ color: 'red' }} className=\"list-item-button \" onClick={this.openModal}> <Icon type=\"shopping-cart\" /> Buy Now </button>\n              ]}\n            >\n              <Meta\n                // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                title={this.props.name}\n                description={numeral(this.props.amount).format('‎0,0.00')}\n              />\n            </Card>\n        </Col>\n\n        </div>\n\n        <Modal\n          title=\"Buy this product\"\n          visible={this.state.modalIsOpen}\n          onOk={this.addAmount}\n          onCancel={this.closeModal}\n          width='80%'\n          footer={false}\n        >\n          <div className='show-for-mobile'>\n            <div className='cart_subtitle'>\n              <h2 ref={subtitle => this.subtitle = subtitle}>{this.props.name}</h2>\n            </div>\n            <div className=\"price-div\">Price:{this.props.amount} bdt</div>\n            <div className=\"cost-div\">Total Cost:{(parseInt(this.props.amount)) * this.state.cart} bdt</div>\n\n            <div className=\"quantity\">\n              <span>\n                <button className=\"removeCart\" onClick={this.removeCart}>-</button>\n              </span>\n              <span className=\"box-item\">\n                {this.state.cart}\n              </span>\n\n              <span>\n                <button className=\"addCart\" onClick={this.addCart}>+</button>\n\n              </span>\n            </div>\n\n            <br />\n\n\n            <button className=\"cancelButton\" onClick={this.closeModal}>close</button>\n             <button className=\"purchaseButton\" disabled={this.state.cart<1} onClick={this.addAmount}>Purchase</button>\n          </div>\n          <div className='show-for-desktop'>\n            <Row gutter={[40, 24]}>\n              <Col span={8} offset={8}>\n                <Card title={\"Purchase\"}  >\n                  <div className='cart_subtitle'>\n                    <h2 ref={subtitle => this.subtitle = subtitle}>{this.props.name}</h2>\n                  </div>\n                  <div className=\"price-div\">Price:{this.props.amount} bdt</div>\n                  <div className=\"cost-div\">Total Cost:{(parseInt(this.props.amount)) * this.state.cart} bdt</div>\n\n                  <div className=\"quantity\">\n                    <span>\n                      <button className=\"removeCart\" onClick={this.removeCart}>-</button>\n                    </span>\n                    <span className=\"box-item\">\n                      {this.state.cart}\n                    </span>\n                    <span>\n                      <button className=\"addCart\" onClick={this.addCart}>+</button>\n                    </span>\n                  </div>\n                  <br />\n                </Card>\n              </Col>\n            </Row>\n            <Row gutter={[40, 24]}>\n              <Col span={8} offset={10}>\n                <Button type='danger' onClick={this.closeModal}>close</Button> {' '}\n                <Button type='primary' disabled={this.state.cart<1} onClick={this.addAmount}>Purchase</Button>\n              </Col>\n            </Row>\n\n          </div>\n        </Modal>\n      </div>\n    )\n\n\n  }\n\n};\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n    user: state.users.find((user) => user.id === state.auth.uid)\n\n  }\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n\n//   startEditUser: (user) => dispatch(startEditUser(user))\n// });\n\nexport default connect(mapStateToProps, { startEditUser, startAddUserPurchaseHistory })(PurchaseListItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PurchaseListItem from './PurchaseListItem';\nimport { withRouter } from 'react-router-dom';\nimport { Col, Row, Button, Icon } from 'antd';\n\nexport const PurchaseList = (props) => {\n\n  //  const [count, setCount] = useState(0);\n\n  return (\n    <div className=\"content-container\">\n\n      <div className=\"list-header\">\n        <div className=\"show-for-mobile\">Total Cost : {(props.user.amount ? props.user.amount : 0) - (props.user.paid ? props.user.paid : 0)} </div>\n        <div className=\"show-for-desktop\">Total Cost :</div>\n        <div className=\"show-for-desktop\">{(props.user.amount ? props.user.amount : 0) - (props.user.paid ? props.user.paid : 0)}</div>\n      </div>\n\n      <div className=\"list-body\">\n      <br />\n\n        {\n\n          props.products.length === 0 ? (\n            <div className=\"list-item\">\n              <span>No products</span>\n            </div>\n          ) : (\n              \n              <Row gutter={[40, 24]}>\n                {props.products.map((product) => {\n                  return <PurchaseListItem key={product.id} {...product} />;\n                })}\n              </Row>\n            )\n        }\n        <Button type={\"danger\"} onClick={() => { props.history.goBack(); }}><Icon type=\"left\" />Back</Button>\n\n\n      </div>\n    </div>\n  );\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n    user: state.users.find((user) => user.id === state.auth.uid),\n    name: state\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(PurchaseList));\n","import React from 'react';\nimport PurchaseList from '../purchase/PurchaseList';\nimport { Link } from 'react-router-dom';\n\n\n\nconst UserPage = () => (\n  <div>\n  <div className=\"page-header__actions\">\n </div>\n    <PurchaseList />\n  </div>\n);\n\nexport default UserPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nconst UserListItem = ({ id, name, amount, paid }) => (\n  <Link className=\"list-item-user\" to={`/pay/${id}`}>\n    <div>\n      <h3 className=\"list-item-user__title\">{name}</h3>\n     </div>\n    <h5 className=\"list-item-user__data\">Total Cost: ৳{numeral(amount).format('0,0.00')}</h5>\n    <h5 className=\"list-item-user__data\">Total Paid: ৳{numeral(paid).format('0,0.00')}</h5>\n    <h5 className=\"list-item-user__data\">Total Due: ৳{numeral(amount-(paid?paid:0)).format('0,0.00')}</h5>\n  </Link>\n);\n\nexport default UserListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport UserListItem from './UserListItem';\nimport { Link } from 'react-router-dom';\n\nexport const UserList = (props) => (\n  <div className=\"content-container\">\n    <div className=\"list-header\">\n      <div className=\"show-for-mobile\">Users List </div>\n      \n     \n    </div>\n    \n    <div className=\"list-body\">\n      {\n        \n        props.users.length === 0 ? (\n          <div className=\"list-item-user list-item--message\">\n            <span>No User</span>\n          </div>\n        ) : (\n            props.users.map((user) => {\n              return <UserListItem key={user.id} {...user} />;\n            })\n          )\n      }\n      <button className=\"button-red\" onClick={()=>{props.history.goBack();}}>Back</button>\n\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users,\n    name:state\n  };\n};\n\nexport default connect(mapStateToProps)(UserList);\n","import React , { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n class PayForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: props.user ? props.user.name : '',\n            amount: props.user && props.user.amount ? (props.user.amount).toString() : 0,\n            paid: props.user &&  props.user.paid ? (props.user.paid).toString() : 0,\n            newPaid:'',\n            error: ''\n        };\n    }\n    onNameChange = (e) => {\n        const name = e.target.value;\n        this.setState(() => ({ name }));\n    };\n\n    onAmountChange = (e) => {\n        const newPaid = e.target.value;\n\n        if (!newPaid || newPaid.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n            this.setState(() => ({ newPaid }));\n        }\n    };\n\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const updatedPaid= (parseInt(this.state.paid)+parseInt(this.state.newPaid));\n\n        if (!this.state.newPaid) {\n            this.setState(() => ({ error: 'Please provide amount.' }));\n        } else {\n            this.setState(() => ({ error: '' }));\n            this.props.onSubmit({\n                name: this.state.name,\n                amount: this.state.amount,\n                paid:updatedPaid\n\n            },this.state.newPaid);\n        }\n    };\n    render() {\n        return (\n            <form className=\"form\" onSubmit={this.onSubmit}>\n                {this.state.error && <p className=\"form__error\">{this.state.error}</p>}\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    autoFocus\n                    className=\"text-input\"\n                    value={this.state.name}\n                    onChange={this.onNameChange}\n                    disabled={true}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    autoFocus\n                    className=\"text-input\"\n                    value={\"Due: \"+(parseInt(this.state.amount)-parseInt(this.state.paid))+\" bdt\"}\n                    \n                    disabled={true}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"type amount to pay\"\n                    className=\"text-input\"\n                    value={this.state.newPaid}\n                    onChange={this.onAmountChange}\n                />\n\n\n\n                <div>\n                    <button className=\"button-save\">Proceed Payment</button>\n                    <button className=\"button-red\" onClick={()=>{this.props.history.goBack();}}>Back</button>\n                </div>\n            </form>\n        )\n    }\n}\n\n\nexport default  withRouter(PayForm);","import database from '../firebase/firebase';\n\n\n\n//ADD Payment History\nexport const addUserPaymentHistory = (payment) => ({\n  type: 'ADD_USER_PAYMENT_HISTORY',\n  payment\n});\n\nexport const startAddUserPaymentHistory = (id, paymentData = {}) => {\n  return (dispatch, getState) => {\n    const {\n      date = '',\n\n      amount = 0\n\n    } = paymentData;\n    const payment = { date, amount };\n    return database.ref(`userPaymentHistory/${id}`).push(payment).then((ref) => {\n      dispatch(addUserPaymentHistory({\n        ...payment\n      }));\n    });\n  };\n};\n\n\n// SET_ADMIN\nexport const setUserPaymentHistory = (payment) => ({\n  type: 'SET_USER_PAYMENT_HISTORY',\n  payment\n});\n\nexport const startSetUserPaymentHistory = () => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`userPaymentHistory`).once('value').then((snapshot) => {\n      const userPaymentHistory = [];\n     \n\n      snapshot.forEach((childSnapshot) => {\n        userPaymentHistory.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n\n\n      dispatch(setUserPaymentHistory(userPaymentHistory));\n    });\n  };\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PayForm from './PayForm';\nimport { startAdminAddAmount } from '../../actions/admin';\nimport { startPay } from '../../actions/users';\nimport {normalDate} from '../helper/utility'\nimport { Link } from 'react-router-dom';\nimport { startAddUserPaymentHistory,startSetUserPaymentHistory } from '../../actions/userPaymentHistory';\nimport { message } from 'antd';\n\n\nexport class PaymentPage extends React.Component {\n  onSubmit = (user, paid) => {\n    let today = new Date;\n\n    this.props.startPay(this.props.user.id, user);\n    this.props.startAdminAddAmount({ cash: parseInt(this.props.admin.cash ? this.props.admin.cash : 0) + parseInt(paid) })\n    this.props.startAddUserPaymentHistory(this.props.user.id,{date: normalDate(today), amount:paid })\n    this.props.startSetUserPaymentHistory();\n    message.success(\"Payment successful\");\n    this.props.history.push('/manageWallet');\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <div className=\"content-container\">\n            <h1 className=\"page-header__title\">Payment Page </h1>\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <PayForm\n            user={this.props.user}\n            onSubmit={this.onSubmit}\n          />\n           <Link className=\"button \"  to={`/userPaymentHistory/${this.props.user.id}`} >Payment History</Link>\n           <Link className=\"button \"  to={`/userPurchaseHistory/${this.props.user.id}`} >Purchase History</Link>\n\n          \n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, props) => ({\n  user: state.users.find((user) => user.id === props.match.params.id),\n  admin: state.admin\n});\n\n// const mapDispatchToProps = (dispatch, props) => ({\n//     startPay: (id, user) => dispatch(startPay(id, user)),\n//     startAdminAddAmount:(updates)=>dispatch(startAdminAddAmount(updates))\n// });\n\nexport default connect(mapStateToProps, { startPay, startAdminAddAmount, startAddUserPaymentHistory ,startSetUserPaymentHistory})(PaymentPage);\n","import uuid from 'uuid';\nimport database from '../firebase/firebase';\nimport { dynamicSort } from '../components/helper/utility'\n\n\n//ADD_PAY\nexport const payAdmin = (updates) => ({\n  type: 'PAY_ADMIN',\n  updates\n});\n\nexport const startAdminPay = (updates) => {\n  return (dispatch, getState) => {\n    return database.ref(`admin/`).update(updates).then(() => {\n      dispatch(payAdmin(updates));\n    });\n  };\n};\n\n\n// ADD_AMOUNT\nexport const addAmount = (updates) => ({\n  type: 'ADD_AMOUNT_ADMIN',\n  updates\n});\n\nexport const startAdminAddAmount = (updates) => {\n  return (dispatch, getState) => {\n    return database.ref(`admin/`).update(updates).then(() => {\n      dispatch(addAmount(updates));\n    });\n  };\n};\n\n\n// SET_ADMIN\nexport const setAdmin = (admin) => ({\n  type: 'SET_ADMIN',\n  admin\n});\n\nexport const startSetAdmin = () => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`admin`).once('value').then((snapshot) => {\n     \n\n      \n       \n      \n      dispatch(setAdmin(snapshot.val()));\n\n    });\n  };\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport numeral from 'numeral';\nimport { Link } from 'react-router-dom';\n\nexport class AddUserPage extends React.Component {\n  onSubmit = (user) => {\n    \n    this.props.startEditUser(user);\n    this.props.startSetUsers();\n    this.props.history.push('/dashboard');\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <div className=\"content-container\">\n            <h1 className=\"page-header__title\">Profile</h1>\n          </div>\n        </div>\n\n\n        <div className=\"list-item-wallet\">\n          <h2 className=\"list-item__data\">Payment : ৳{numeral(this.props.admin.cash).format('0,0.00')}</h2>\n          <h2 className=\"list-item__data\">Withdrawal: ৳{numeral(this.props.admin.paid).format('0,0.00')}</h2>\n          <h2 className=\"list-item__data\">Cash: ৳{numeral(this.props.admin.cash - (this.props.admin.paid ? this.props.admin.paid : 0)).format('0,0.00')}</h2>\n        </div>\n        <div>\n          <Link className=\"button\" to=\"/payAdminWallet\">Withdraw</Link>\n          <Link className=\"button\" to=\"/adminCashOutHistory\">Withdrawal History</Link>\n          <button className=\"button-red\" onClick={()=>{this.props.history.goBack();}}>Back</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  //  existingUser: state.users.find((user) => user.id === props.match.params.id)\n  admin: state.admin\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUserPage);","import React , { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n class PayForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cash: props.admin && props.admin.cash ? (props.admin.cash).toString() : 0,\n            paid: props.admin &&  props.admin.paid ? (props.admin.paid).toString() : 0,\n            newPaid:'',\n            error: ''\n        };\n    }\n    onNameChange = (e) => {\n        const name = e.target.value;\n        this.setState(() => ({ name }));\n    };\n\n    onAmountChange = (e) => {\n        const newPaid = e.target.value;\n\n        if (!newPaid || newPaid.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n            this.setState(() => ({ newPaid }));\n        }\n    };\n\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const updatedPaid= (parseInt(this.props.admin.paid ? this.props.admin.paid:0)+parseInt(this.state.newPaid));\n\n        if ( !this.state.newPaid) {\n            this.setState(() => ({ error: 'Please provide name and amount.' }));\n        } else {\n            this.setState(() => ({ error: '' }));\n            this.props.onSubmit({\n                paid:updatedPaid\n\n            },this.state.newPaid);\n        }\n    };\n    render() {\n        return (\n            <form className=\"form\" onSubmit={this.onSubmit}>\n                {this.state.error && <p className=\"form__error\">{this.state.error}</p>}\n               \n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    autoFocus\n                    className=\"text-input\"\n                    value={\"Cash: \"+(parseInt(this.props.admin.cash?this.props.admin.cash:0)-parseInt(this.props.admin.paid ?this.props.admin.paid : 0))+\" bdt\"}\n                    \n                    disabled={true}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"type amount to pay\"\n                    className=\"text-input\"\n                    value={this.state.newPaid}\n                    onChange={this.onAmountChange}\n                />\n\n\n\n                <div>\n                    <button className=\"button-save\">Proceed Payment</button>\n                    <button className=\"button-red\" onClick={()=>{this.props.history.goBack();}}>Back</button>\n                </div>\n            </form>\n        )\n    }\n}\nexport default withRouter(PayForm) ","import uuid from 'uuid';\nimport database from '../firebase/firebase';\nimport { dynamicSort } from '../components/helper/utility'\n\n\n\n//ADD Payment History\nexport const addHistory = (payment) => ({\n  type: 'ADD_HISTORY',\n  payment\n});\n\nexport const startAdminAddHistoryAmount = (paymentData = {}) => {\n  return (dispatch, getState) => {\n    const {\n      date = '',\n\n      amount = 0\n\n    } = paymentData;\n    const payment = { date, amount };\n    return database.ref(`adminHistory`).push(payment).then((ref) => {\n      dispatch(addHistory({\n        ...payment\n      }));\n    });\n  };\n};\n\n\n// SET_ADMIN\nexport const setAdminHistory = (payment) => ({\n  type: 'SET_ADMIN_HISTORY',\n  payment\n});\n\nexport const startSetAdminHistory = () => {\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`adminHistory`).once('value').then((snapshot) => {\n      const adminHistory = [];\n     \n\n      snapshot.forEach((childSnapshot) => {\n        adminHistory.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n\n\n      dispatch(setAdminHistory(adminHistory));\n    });\n  };\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PayForm from './PayForm';\nimport {  startAdminPay } from '../../actions/admin';\nimport { startAdminAddHistoryAmount,startSetAdminHistory } from '../../actions/adminHistory';\nimport {normalDate} from '../helper/utility';\nimport {message} from 'antd'\n\n\nexport class PaymentPage extends React.Component {\n  onSubmit = (payment, amount) => {\n    let today = new Date;\n    this.props.startAdminAddHistoryAmount({ date: normalDate(today), amount });\n    this.props.startAdminPay(payment);\n    this.props.startSetAdminHistory();\n    message.success(\"Withdrawn Successful\")\n    this.props.history.push('/manageAdminWallet');\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <div className=\"content-container\">\n            <h1 className=\"page-header__title\">Payment Page </h1>\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <PayForm\n            admin={this.props.admin}\n            onSubmit={this.onSubmit}\n          />\n\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, props) => ({\n  user: state.users.find((user) => user.id === props.match.params.id),\n  admin: state.admin\n});\n\n// const mapDispatchToProps = (dispatch, props) => ({\n//     startPay: (id, user) => dispatch(startPay(id, user)),\n//     startAdminAddHistoryAmount:(date,)\n// });\n\nexport default connect(mapStateToProps, { startAdminAddHistoryAmount, startAdminPay ,startSetAdminHistory})(PaymentPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nconst PaymentListItem = ({ id, amount, date }) => (\n  <div className=\"list-item\" >\n    \n    <h5 className=\"list-item__data\"> {date}</h5>\n    <h5 className=\"list-item__data\">৳{numeral(amount).format('0,0.00')}</h5>\n\n  </div>\n);\n\nexport default PaymentListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PaymentListItem from './paymentListItem';\nimport { Link } from 'react-router-dom';\n\nexport const PaymentList = (props) => (\n  <div className=\"content-container\">\n    <div className=\"list-item\" >\n\n      <h5 className=\"list-item__data\"> Date</h5>\n      <h5 className=\"list-item__data\">Amount</h5>\n\n\n\n    </div>\n\n    <div className=\"list-body scrollable\">\n      {\n\n        props.adminHistory.length === 0 ? (\n          <div className=\"list-item-user list-item--message\">\n            <span>No History</span>\n          </div>\n        ) : (\n            props.adminHistory.map((user) => {\n              return <PaymentListItem key={user.id} {...user} />;\n            })\n          )\n      }\n    </div>\n    <button className=\"button-red\" onClick={() => { props.history.goBack(); }}>Back</button>\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    adminHistory: state.adminHistory,\n    // name:state\n  };\n};\n\nexport default connect(mapStateToProps)(PaymentList);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nconst PaymentListItem = ({ id, amount, date }) => (\n  <div className=\"list-item\" >\n    <h5 className=\"list-item__data\"> {date}</h5>\n    <h5 className=\"list-item__data\">৳{numeral(amount).format('0,0.00')}</h5>\n\n  </div>\n);\n\nexport default PaymentListItem;\n","import database from '../firebase/firebase';\n\n\n\n// SET_ADMIN\nexport const setCurrentUserPaymentHistory = (payment) => ({\n  type: 'SET_CURRENT_USER_PAYMENT_HISTORY',\n  payment\n});\n\nexport const startSetCurrentUserPaymentHistory = (id) => {\n  return (dispatch, getState) => {\n    return database.ref(`userPaymentHistory/${id}`).once('value').then((snapshot) => {\n      const userPaymentHistory = [];\n\n      snapshot.forEach((childSnapshot) => {\n        userPaymentHistory.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n\n\n      dispatch(setCurrentUserPaymentHistory(userPaymentHistory));\n    });\n  };\n};","import React ,{useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PaymentListItem from './userPaymentListItem';\nimport { startSetCurrentUserPaymentHistory } from '../../actions/currentuserHistory';\nimport { withRouter } from 'react-router-dom';\n\n\nexport const PaymentList = (props) =>{\n  useEffect(() => {\n    if (props.match.params.id) {\n      props.startSetCurrentUserPaymentHistory(props.match.params.id)\n    }\n  },[props.match.params.id]);\n\n  \n  return(\n  <div className=\"content-container\">\n    <div className=\"list-item\" >\n    \n    <h5 className=\"list-item__data\"> Date</h5>\n    <h5 className=\"list-item__data\">Amount</h5>\n\n      \n     \n    </div>\n    \n    <div className=\"list-body\">\n    {\n      \n      props.currentUserHistory.length === 0 ? (\n        <div className=\"list-item-user list-item--message\">\n          <span>No History</span>\n        </div>\n      ) : (\n          props.currentUserHistory.map((user) => {\n            return <PaymentListItem key={user.id} {...user} />;\n          })\n        )\n    }\n    <button className=\"button-red\" onClick={()=>{props.history.goBack();}}>Back</button>\n\n  </div>\n  </div>\n);\n}\nconst mapStateToProps = (state, props) => {\n  return {\n    currentUserHistory: state.currentUserHistory ,\n     id : props.match.params.id\n  };\n};\n\nexport default connect(mapStateToProps,{startSetCurrentUserPaymentHistory})(PaymentList);\n","import database from '../firebase/firebase';\n\n\n\n// SET_ADMIN\nexport const setCurrentUserPurchaseHistory = (purchase) => ({\n  type: 'SET_CURRENT_USER_PURCHASE_HISTORY',\n  purchase\n});\n\nexport const startSetCurrentUserPurchaseHistory = (id) => {\n\n  return (dispatch, getState) => {\n    return database.ref(`userPurchaseHistory/${id}`).once('value').then((snapshot) => {\n      const userPurchaseHistory = [];\n\n      snapshot.forEach((childSnapshot) => {\n        userPurchaseHistory.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n\n\n      dispatch(setCurrentUserPurchaseHistory(userPurchaseHistory));\n    });\n  };\n};","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n// import PurchaseListItem from './userPurchaseListItem';\nimport { startSetCurrentUserPurchaseHistory } from '../../actions/currentUserPurchaseHistory';\nimport { Link } from 'react-router-dom';\nimport {Table} from 'antd';\n\nexport const PurchaseList = (props) => {\n  useEffect(() => {\n    if (props.match.params.id) {\n      props.startSetCurrentUserPurchaseHistory(props.match.params.id)\n    }\n  }, [props, props.match.params.id]);\n  \n  const columns=[\n    {\n      title: 'Date',\n      dataIndex: 'date',\n      key: 'date',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: 'Amount',\n      key:data=>'data.amount' + data.quantity,\n      render:data=>data.amount * data.quantity\n    },\n  ]\n\n  const pagination={\n    defaultPageSize:5\n  }\n\n  return (\n    <div className=\"content-container\">\n      <div className=\"list-item\" >\n\n        <h5 className=\"list-item__data\"> Purchase List: {props.user.name} </h5>\n\n\n\n      </div>\n      <Table className=\"table\" dataSource={props.currentUserPurchaseHistory && props.currentUserPurchaseHistory.reverse()} columns={columns} pagination={pagination} />\n\n      {/* \n\n        props.currentUserPurchaseHistory.length === 0 ? (\n          <div className=\"list-item-user list-item--message\">\n            <span>No History</span>\n          </div>\n        ) : (\n            <div className=\"scrollable\">\n              <table className=\"table\" border='1' >\n                <thead >\n                  <tr>\n                    <th>Date</th>\n                    <th>Name</th>\n                    <th>Qty</th>\n                    <th>Rate</th>\n                    <th>Total</th>\n                  </tr>\n                </thead>\n\n                {props.currentUserPurchaseHistory.map((user) => {\n                  return <PurchaseListItem key={user.id} {...user} />;\n                })}\n              </table>\n            </div>\n\n          )\n       */}\n      <button className=\"button-red\" onClick={() => { props.history.goBack(); }}>Back</button>\n\n\n    </div>\n  );\n}\nconst mapStateToProps = (state, props) => {\n  return {\n    user: state.users.find((user) => user.id === props.match.params.id),\n    currentUserPurchaseHistory: state.currentUserPurchaseHistory,\n    id: props.match.params.id\n  };\n};\n\nexport default connect(mapStateToProps, { startSetCurrentUserPurchaseHistory })(PurchaseList);\n","import React from 'react';\nimport { Router, Route, Switch, Link, NavLink } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport ProductDashboardPage from '../components/general/ProductDashboardPage';\nimport AddProductPage from '../components/product/AddProductPage';\nimport AddUserPage from '../components/user/AddUserPage';\nimport EditProductPage from '../components/product/EditProductPage';\nimport NotFoundPage from '../components/general/NotFoundPage';\nimport LoginPage from '../components/general/LoginPage';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport AdminPage from '../components/admin/AdminPage'\nimport UserPage from '../components/user/UserPage'\nimport UserList from '../components/manageWallet/UserList'\nimport PaymentPage from '../components/manageWallet/PaymentPage'\nimport manageAdminWallet from '../components/manageAdminWallet'\nimport AdminPaymentPage from '../components/manageAdminWallet/paymentPage'\nimport CashOutList from '../components/manageAdminWallet/paymentList'\nimport UserPaymentList  from '../components/userPayment/userPaymentList'\nimport UserPurchaseList  from '../components/userPurchase/userPurchaseList'\n\n\n\nexport const history = createHistory();\n\nconst AppRouter = () => (\n  <Router history={history}>\n    <div>\n      <Switch>\n        <PublicRoute path=\"/\" component={LoginPage} exact={true} />\n        <PrivateRoute path=\"/admin\" component={AdminPage} />\n        <PrivateRoute path=\"/dashboard\" component={ProductDashboardPage} />\n        <PrivateRoute path=\"/user\" component={UserPage} />\n        <PrivateRoute path=\"/create\" component={AddProductPage} />\n        <PrivateRoute path=\"/addUser\" component={AddUserPage} />\n        <PrivateRoute path=\"/manageWallet\" component={UserList} />\n        <PrivateRoute path=\"/manageAdminWallet\" component={manageAdminWallet} />\n        <PrivateRoute path=\"/payAdminWallet\" component={AdminPaymentPage} />\n        <PrivateRoute path=\"/adminCashOutHistory\" component={CashOutList} />\n        \n\n\n        <PrivateRoute path=\"/userPaymentHistory/:id\" component={UserPaymentList} />\n        <PrivateRoute path=\"/userPurchaseHistory/:id\" component={UserPurchaseList} />\n        <PrivateRoute path=\"/pay/:id\" component={PaymentPage} />\n        <PrivateRoute path=\"/edit/:id\" component={EditProductPage} />\n    {/*  <PrivateRoute path=\"/addAmount/:id\" component={EditProductPage} /> */}\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","// Products Reducer\n\nconst productsReducerDefaultState = [];\n\nexport default (state = productsReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'ADD_PRODUCT':\n      return [\n        ...state,\n        action.product\n      ];\n    case 'REMOVE_PRODUCT':\n      return state.filter(({ id }) => id !== action.id);\n    case 'EDIT_PRODUCT':\n      return state.map((product) => {\n        if (product.id === action.id) {\n          return {\n            ...product,\n            ...action.updates\n          };\n        } else {\n          return product;\n        };\n      });\n    case 'SET_PRODUCTS':\n      return action.products;\n\n\n    default:\n      return state;\n  }\n};\n","import moment from 'moment';\n\n// Filters Reducer\n\nconst filtersReducerDefaultState = {\n  text: '',\n  sortBy: 'date',\n  startDate: moment().startOf('month'),\n  endDate: moment().endOf('month')\n};\n\nexport default (state = filtersReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'SET_TEXT_FILTER':\n      return {\n        ...state,\n        text: action.text\n      };\n    case 'SORT_BY_AMOUNT':\n      return {\n        ...state,\n        sortBy: 'amount'\n      };\n    case 'SORT_BY_DATE':\n      return {\n        ...state,\n        sortBy: 'date'\n      };\n    case 'SET_START_DATE':\n      return {\n        ...state,\n        startDate: action.startDate\n      };\n    case 'SET_END_DATE':\n      return {\n        ...state,\n        endDate: action.endDate\n      };\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        uid: action.uid,\n        email: action.email,\n        name:action.name\n      };\n    case 'LOGOUT':\n      return {};\n    default:\n      return state;\n  }\n};\n","// users Reducer\n\nconst usersReducerDefaultState = [];\n\nexport default (state = usersReducerDefaultState, action) => {\n  switch (action.type) {\n   \n    case 'ADD_USER':\n      return [\n        ...state,\n        action.user\n      ];\n      case 'EDIT_USER':\n      return state.map((user) => {\n        if (user.id === action.id) {\n          return {\n            ...user,\n            ...action.updates\n          };\n        } else {\n          return user;\n        };\n      });\n      case 'PAY':\n      return state.map((user) => {\n        if (user.id === action.id) {\n          return {\n            ...user,\n            ...action.updates\n          };\n        } else {\n          return user;\n        };\n      });\n    case 'SET_USERS':\n      return action.users;\n    case 'ADD_AMOUNT':\n      return state.map((user) => {\n        if (user.id === action.id) {\n          return {\n            ...user,\n            ...action.updates\n          };\n        } else {\n          return user;\n        };\n      });\n    default:\n      return state;\n  }\n};\n","// users Reducer\n\nconst adminReducerDefaultState = [];\n\nexport default (state = adminReducerDefaultState, action) => {\n  switch (action.type) {\n\n    case 'PAY_ADMIN':\n     \n          return {\n            ...state,\n            ...action.updates\n          };\n       \n\n    case 'ADD_AMOUNT_ADMIN':\n      return {\n        ...state,\n        ...action.updates\n      };\n   \n      case 'SET_ADMIN':\n\n      return {\n        ...state,\n       ...action.admin\n\n      };\n    default:\n      return state;\n  }\n};\n","// users Reducer\n\nconst adminHistoryReducerDefaultState = [];\n\nexport default (state = adminHistoryReducerDefaultState, action) => {\n  switch (action.type) {\n\n    \n    case 'ADD_HISTORY':\n      let payment=action.payment;\n      return [\n        ...state,\n        action.payment\n  ];\n      case 'SET_ADMIN_HISTORY':\n\n        return action.payment;\n    default:\n      return state;\n  }\n};\n","// users Reducer\n\nconst userPaymentHistoryReducerDefaultState = [];\n\nexport default (state = userPaymentHistoryReducerDefaultState, action) => {\n  switch (action.type) {\n\n    \n    case 'ADD_USER_PAYMENT_HISTORY':\n      return [\n        ...state,\n        action.payment\n  ];\n      case 'SET_USER_PAYMENT_HISTORY':\n\n        return action.payment;\n    default:\n      return state;\n  }\n};\n","// users Reducer\n\nconst userPurchaseHistoryReducerDefaultState = [];\n\nexport default (state = userPurchaseHistoryReducerDefaultState, action) => {\n  switch (action.type) {\n\n    \n    case 'ADD_USER_PURCHASE_HISTORY':\n      return [\n        ...state,\n        action.purchase\n  ];\n      case 'SET_USER_PURCHASE_HISTORY':\n\n        return action.purchase;\n    default:\n      return state;\n  }\n};\n","// users Reducer\n\nconst currentUserPaymentHistoryReducerDefaultState = [];\n\nexport default (state = currentUserPaymentHistoryReducerDefaultState, action) => {\n  switch (action.type) {\n\n\n\n    case 'SET_CURRENT_USER_PAYMENT_HISTORY':\n\n      return action.payment;\n    default:\n      return state;\n  }\n};\n","// users Reducer\n\nconst currentUserPurchaseHistoryReducerDefaultState = [];\n\nexport default (state = currentUserPurchaseHistoryReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'SET_CURRENT_USER_PURCHASE_HISTORY':\n      return action.purchase;\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport productsReducer from '../reducers/products';\nimport filtersReducer from '../reducers/filters';\nimport authReducer from '../reducers/auth';\nimport usersReducer from '../reducers/users';\nimport adminReducer from '../reducers/admin';\nimport adminHistoryReducer from '../reducers/adminHistory';\nimport userPaymentHistoryReducer from '../reducers/userPaymentHistory';\nimport userPurchaseHistoryReducer from '../reducers/userPurchaseHistory';\nimport currentUserHistoryReducer from '../reducers/currentUserHistory';\nimport currentUserPurchaseHistoryReducer from '../reducers/currentUserPurchaseHistory';\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composeEnhancers =  compose;\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      products: productsReducer,\n      filters: filtersReducer,\n      auth: authReducer,\n      users:usersReducer,\n      admin:adminReducer,\n      adminHistory:adminHistoryReducer,\n      userPaymentHistory:userPaymentHistoryReducer,\n      userPurchaseHistory:userPurchaseHistoryReducer,\n      currentUserHistory:currentUserHistoryReducer,\n      currentUserPurchaseHistory:currentUserPurchaseHistoryReducer,\n\n\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n  );\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst LoadingPage = () => (\n  <div className=\"loader\">\n    <img className=\"loader__image\" src=\"/images/loader.gif\" />\n  </div>\n);\n\nexport default LoadingPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter, { history } from './routers/AppRouter';\nimport configureStore from './store/configureStore';\nimport { startSetProducts } from './actions/products';\nimport {startSetUsers } from './actions/users';\nimport {startSetAdmin } from './actions/admin';\nimport {startSetAdminHistory } from './actions/adminHistory';\nimport {startSetUserPaymentHistory } from './actions/userPaymentHistory';\nimport { login, logout } from './actions/auth';\nimport * as serviceWorker from './serviceWorker';\nimport { firebase } from './firebase/firebase';\nimport LoadingPage from './components/general/LoadingPage';\nimport './styles/styles.scss';\nimport 'antd/dist/antd.css';\n\n// ReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nconst store = configureStore();\nconst jsx = (\n  <Provider store={store}>\n  \n    <AppRouter />\n  </Provider>\n);\nlet hasRendered = false;\nconst renderApp = () => {\n  if (!hasRendered) {\n    store.dispatch(startSetUsers());\n    store.dispatch(startSetProducts());\n    store.dispatch(startSetAdmin());\n    store.dispatch(startSetAdminHistory());\n    store.dispatch(startSetUserPaymentHistory());\n\n    ReactDOM.render(jsx, document.getElementById('app'));\n    hasRendered = true;\n  }\n};\n\nReactDOM.render(<LoadingPage />, document.getElementById('app'));\n\nfirebase.auth().onAuthStateChanged((user) => {\n  if (user) {\n    store.dispatch(login(user.uid));\n    store.dispatch(startSetUsers());\n    store.dispatch(startSetProducts()).then(() => {\n      renderApp();\n      if (history.location.pathname === '/') {\n      history.push('/dashboard');\n      }\n    });\n  } else {\n    store.dispatch(logout());\n    renderApp();\n    history.push('/');\n  }\n});\n\nserviceWorker.register();\n"],"sourceRoot":""}